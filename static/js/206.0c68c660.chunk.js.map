{"version":3,"file":"static/js/206.0c68c660.chunk.js","mappings":"iOAEaA,E,QAAkBC,EAAAA,IAAH,g4C,UCFfC,EAAgB,CACzBC,KAAM,GACNC,MAAO,GACPC,SAAU,ICHDC,EACH,CACFC,MAAO,OACPC,KAAM,OACNL,KAAM,OACNM,YAAa,cACbC,UAAU,GANLJ,EAQF,CACHC,MAAO,QACPC,KAAM,QACNL,KAAM,QACNM,YAAa,gBACbC,UAAU,GAbLJ,EAeC,CACNC,MAAO,WACPC,KAAM,WACNL,KAAM,WACNM,YAAa,0BACbC,UAAU,G,UClBLC,EAAYC,EAAAA,KAAaC,MAAM,CACxCV,KAAMS,EAAAA,KAAaF,WAAWI,IAAI,EAAE,eAAeC,OACnDX,MAAOQ,EAAAA,KAAaF,WAAWM,WAAWZ,MAAM,cAAcW,OAC9DV,SAAUO,EAAAA,KAAaF,SAAS,kBAAkBM,WAAWF,IAAI,EAAE,eAAeG,IAAI,GAAG,gBAAgBF,S,4BCiD7G,EAvCiB,WAKb,IAAMG,GAAWC,EAAAA,EAAAA,MAiBjB,OACI,UAACnB,EAAD,YACI,2CAGA,SAAC,KAAD,CAAQoB,SApBO,SAAC,EAA2BC,GAAa,IACxDC,EAAa,CAAEnB,KADwC,EAArCA,KACGC,MADkC,EAA/BA,MACIC,SAD2B,EAAxBA,UAEnCkB,QAAQC,IAAI,WAAWF,GAEvBJ,GAASO,EAAAA,EAAAA,IAAOH,GAEnB,EAcyCpB,cAAeA,EAAewB,iBAAkBf,EAAlF,UACI,UAAC,KAAD,YACI,SAACgB,EAAA,GAAD,UAAerB,KACf,SAACqB,EAAA,GAAD,UAAerB,KACf,SAACqB,EAAA,GAAD,UAAerB,KAEf,SAACsB,EAAA,EAAD,8BAKnB,C,mCChDD,IAHe,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAA8B,IAApBrB,KAAAA,OAAoB,MAAf,SAAe,EAC5C,OAAO,mBAAQA,KAAMA,EAAd,SAAqBqB,GAC/B,C,wHCFYC,E,QAAW7B,EAAAA,IAAH,yC,4BCqBrB,EAjBkB,SAAC,GAA+B,IAA7BM,EAA4B,EAA5BA,MAAOJ,EAAqB,EAArBA,KAAS4B,GAAY,YACvCC,GAAKC,EAAAA,EAAAA,UAAQ,kBAAMC,EAAAA,EAAAA,KAAN,GAAgB,IAEnC,OACI,4BACI,kBAAOC,QAASH,EAAhB,SAAqBzB,KACrB,SAAC,MAAD,QAAOyB,GAAIA,EAAI7B,KAAMA,GAAU4B,KAO/B,SAAC,KAAD,CAAc5B,KAAMA,EAAMiC,UAAWN,MAGhD,C","sources":["components/modules/NavbarAuth/Register/register.styled.jsx","components/modules/NavbarAuth/Register/initialValues.js","components/modules/NavbarAuth/Register/fields.js","components/modules/NavbarAuth/Register/Validation/regSchema.jsx","components/modules/NavbarAuth/Register/Register.jsx","components/shared/Button/Button.jsx","components/shared/TextField/ErrorField.jsx","components/shared/TextField/TextField.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const RegisterMainDiv = styled.div`\n    width: 461px;\n    // height: 461px;\n    margin-left: auto;\n    margin-right: auto;\n    padding: 20px 20px 20px 20px;\n\n    text-align: end;\n    border: 3px solid darkolivegreen;\n    border-radius: 8px;\n    color: darkolivegreen;\n        \n    font-weight: 700;\n    font-size: 24px;\n\n    h2 {\n        margin: 0;\n    }\n    form {\n        margin-top: 222px;\n    }\n    form div {\n        margin-bottom: 12px;\n    }\n    form input {\n        margin-left: 22px;\n        height: 24px;\n\n        // background-color: lightgrey;\n        border: 1px solid darkolivegreen;\n        border-radius: 3px;\n\n        :focus {\n            margin-left: 2px;\n\n            background-color: lightgrey;\n            border: 0px solid red;\n            border-radius: 3px;\n            outline: darkolivegreen solid 2px;\n        }\n    }\n    form button {\n        padding: 11px;\n\n        font-weight: 700;\n        font-size: 18px;\n        \n        background-color: transparent;\n        border: 0px solid gray;\n        border-radius: 3px;\n        background-color: lightgrey;\n        color: darkolivegreen;\n        transition: all 200ms linear;\n        \n        :hover {\n            cursor: pointer;\n            color: lightgrey;\n            background-color: darkolivegreen;\n        }  \n        :active {\n            scale: 0.9;\n        }  \n\n    }\n`;","export const initialValues = {\n    name: '',\n    email: '',\n    password: '',\n};","export const fields = {\n    name: {\n        label: \"Name\",\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Name(min 3)\",\n        required: true,\n    },\n    email: {\n        label: \"Email\",\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Name@mail.com\",\n        required: true,\n    },\n    password: {\n        label: \"Password\",\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"minimum of eight values\",\n        required: true,\n    },\n};","import * as yup from 'yup';\n\nexport const regSchema = yup.object().shape({\n    name: yup.string().required().min(3,'min value 3').trim(),\n    email: yup.string().required().nullable().email('wrong mail').trim(),\n    password: yup.string().required('input somthing').nullable().min(8,'min value 8').max(16,'max value 16').trim(),\n});","// import { useDispatch, useSelector } from \"react-redux\";\n// import { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { signUp } from \"components/redux/auth/auth-operation\";\n// import { getAuthError } from \"components/redux/selectors\";\n\nimport { RegisterMainDiv } from \"./register.styled\";\n\nimport { Formik, Form } from 'formik';\nimport { initialValues } from \"./initialValues\";\nimport { fields } from \"./fields\";\nimport { regSchema } from \"./Validation/regSchema\";\nimport TextField from \"components/shared/TextField/TextField\";\nimport Button from \"components/shared/Button/Button\";\n\nconst Register = () => {\n    // const [errState, setErrState] = useState(\"Sorry no token!\");\n    // const { status, statusText } = useSelector(getAuthError);\n    // const regError = useSelector(store => store.auth.error);\n    // if (errState !== regError) { setErrState(regError); };\n    const dispatch = useDispatch();\n\n    const onSubmitSignup = ({ name, email, password }, actions) => {\n        let personData = { name, email, password };\n        console.log(\"RegData:\",personData);\n\n        dispatch(signUp(personData));\n        // actions.resetForm();\n    };\n\n    // useEffect(() => {\n    //     setErrState(\"Sorry no token!\");\n    //     console.log(\"useEffect!!!\");\n    // }, []);\n\n    // console.log(\"regError\",regError);\n    // console.log(\"errState:\",errState);\n    return (\n        <RegisterMainDiv>\n            <h2>Register Page</h2>\n            {/* {regError!==\"Sorry no token!\" && <p style={{color:\"red\"}}>Pleace input correct data!</p>} */}\n\n            <Formik onSubmit={onSubmitSignup} initialValues={initialValues} validationSchema={regSchema}>\n                <Form >\n                    <TextField {...fields.name} />\n                    <TextField {...fields.email} />\n                    <TextField {...fields.password} />\n\n                    <Button>Register</Button>\n                </Form>\n            </Formik>\n        </RegisterMainDiv>\n    )\n};\nexport default Register;","\n\nconst Button = ({ children, type=\"submit\" }) => {\n    return <button type={type}>{children}</button>\n};\nexport default Button;","import styled from \"@emotion/styled\";\n\nexport const ErrField = styled.div`\n    color: red;\n`;","import { Field, ErrorMessage } from \"formik\"\nimport { useMemo } from \"react\";\nimport { nanoid } from \"nanoid\";\n\nimport { ErrField } from \"./ErrorField\";\n\nconst TextField = ({ label, name, ...props }) => {\n    const id = useMemo(() => nanoid(), []);\n\n    return (\n        <div>\n            <label htmlFor={id}>{label}</label>\n            <Field id={id} name={name} {...props}\n                // value={name} \n                // type=\"text\"\n                // name=\"name\"\n                // placeholder=\"input your name!\"\n                // required\n            />\n            <ErrorMessage name={name} component={ErrField} />\n        </div>\n    )\n};\nexport default TextField;"],"names":["RegisterMainDiv","styled","initialValues","name","email","password","fields","label","type","placeholder","required","regSchema","yup","shape","min","trim","nullable","max","dispatch","useDispatch","onSubmit","actions","personData","console","log","signUp","validationSchema","TextField","Button","children","ErrField","props","id","useMemo","nanoid","htmlFor","component"],"sourceRoot":""}